#jinja2: lstrip_blocks: "True", trim_blocks: "True"
#!/bin/bash

ps aux | grep -q "[b]org prune"
if [ "$?" -eq 0 ]
then
    echo "Borg prune already running, exiting"
    exit 1
fi

# This script is intended to run on a trusted management station to purge borg repo's in
# append-only mode.
# Don't put it on the backup server, it contains all borg secrets!
{% if borgbackup_management_repository_url %}
# override "Warning: The repository at location … was previously located at …"
export BORG_RELOCATED_REPO_ACCESS_IS_OK=yes
{% endif %}

DATE=$(date +%Y-%m-%dT%H:%M:%S)
echo "Starting borg prune at $DATE" 
{% for h in groups['all'] | sort %}
  {% if hostvars[h].borgbackup_passphrase | default(False) %}
# Host: {{ h }}
    {% for b in hostvars[h].borgbackup_servers %}
      {% if hostvars[h].borgbackup_managementstation is defined and inventory_hostname == hostvars[h].borgbackup_managementstation %}
DATE=$(date +%Y-%m-%dT%H:%M:%S)
echo "Starting borg prune for {{ h }} at $DATE" 
export BORG_PASSPHRASE={{ hostvars[h].borgbackup_passphrase }}
export BORG_REPO={% if b.type == 'ssh' %}ssh://{% endif %}{{ b.user }}@{{ b.fqdn }}:{% if b.type == 'ssh' %}{{ b.port }}{% endif %}{{ b.home }}/{{ b.pool }}/{{ h }}
/usr/local/bin/borg prune -v {{ b.options }} -H {{ hostvars[h].borgbackup_retention.hourly }} -d {{ hostvars[h].borgbackup_retention.daily }} -w {{ hostvars[h].borgbackup_retention.weekly }} -m {{ hostvars[h].borgbackup_retention.monthly }} -y {{ hostvars[h].borgbackup_retention.yearly }}
DATE=$(date +%Y-%m-%dT%H:%M:%S)
echo "Ending borg prune for {{ h }} at $DATE" 
      {% endif %}
    {% endfor %}
  {% endif %}
{% endfor %}
DATE=$(date +%Y-%m-%dT%H:%M:%S)
echo "Ending borg prune at $DATE" 

