---
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html#file-module
- name:
    "file : keys"
  file:
    state: directory
    path: "{{ local_tmp | default('~/.ansible/tmp') }}/borg/"
    recurse: true
  register: key_dir
  become_user: "{{ lookup('env', 'USER') }}"
  delegate_to: localhost

- name:
    "shell : copy all keys to local"
  local_action: ansible.builtin.shell scp {{ borgbackup_client_user }}@{{ inventory_hostname }}:/{{ borgbackup_client_user}}/.config/borg/keys/{{ hostvars[item].borgbackup_servers[0].fqdn | replace('.', '_') }}_{{ hostvars[item].borgbackup_servers[0].home | regex_replace('\\/$', '') | replace('/', '_') }}_{{ hostvars[item].borgbackup_servers[0].pool }}_{{ item | replace('-', '_') }} {{ key_dir.path }}
  loop: "{{ groups.borgbackup }}"
  become_user: "{{ lookup('env', 'USER') }}"
  delegate_to: localhost
  when: "'copykeys' in ansible_run_tags"
  tags: copykeys

- name:
    "shell : copy host key to local"
  local_action: ansible.builtin.shell scp {{ borgbackup_client_user }}@{{ inventory_hostname }}:/{{ borgbackup_client_user}}/.config/borg/keys/{{ hostvars[inventory_hostname].borgbackup_servers[0].fqdn | replace('.', '_') }}_{{ hostvars[inventory_hostname].borgbackup_servers[0].home | regex_replace('\\/$', '') | replace('/', '_') }}_{{ hostvars[inventory_hostname].borgbackup_servers[0].pool }}_{{ inventory_hostname | replace('-', '_') }} {{ key_dir.path }}
  become_user: "{{ lookup('env', 'USER') }}"
  delegate_to: localhost
  when: "'copykeys' not in ansible_run_tags"

- name:
    "shell : copy keys to management station"
  local_action: ansible.builtin.shell rsync -a {{ key_dir.path }} {{ borgbackup_management_user }}@{{Â borgbackup_managementstation }}:~/.config/borg/keys/
  become_user: "{{ lookup('env', 'USER') }}"
  delegate_to: localhost

- name:
    "template : put management station prune script"
  template:
    src: prune.sh.j2
    dest: "/usr/local/sbin/borg-prune-external.sh"
    owner: "{{ borgbackup_management_user }}"
    group: "{{ borgbackup_management_user }}"
    mode: 0700
  delegate_to: "{{ borgbackup_managementstation }}"
  loop: "{{ borgbackup_servers }}"
  loop_control:
    loop_var: backupserver

